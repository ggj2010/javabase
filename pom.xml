<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ggj.java</groupId>
    <artifactId>base</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>
    <name>ggj Java Study</name>
    <description>review java base</description>
    <url>http://ggjlovezjy.com:1314</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
      <!--   <version>1.3.0.RELEASE</version>-->
        <!--2017.04.20 注释-->
       <!-- <version>1.3.7.RELEASE</version>-->
        <!--1.4.0.RELEASE 有个bug 默认配置项不支持自定义数据源 DataSourceProperties这个类缺少initializeDataSourceBuilder()-->
        <!--<version>1.4.0.RELEASE</version>-->
        <!--<version>1.4.1.RELEASE</version>-->
        <version>1.5.1.RELEASE</version>
    </parent>


    <modules>
        <module>thread</module>
        <module>socket</module>
        <module>lambada</module>
        <module>kafka</module>
        <module>zookeeper</module>
        <module>redis</module>
        <module>js</module>
        <module>httpclient</module>
        <module>mobiletechnology</module>
        <module>webmagic</module>
        <module>elasticsearch</module>
        <module>db</module>
        <module>netflix</module>
        <module>dailycode</module>
        <module>log</module>
        <module>ddd</module>
    </modules>

    <properties>
        <!--test -->
        <junit.version>4.12</junit.version>
        <contiperf.version>2.2.0</contiperf.version>
        <!-- logback -->
        <logback.version>1.1.3</logback.version>
        <!-- util -->
        <lombok.version>1.12.6</lombok.version>
        <lz4.version>1.3.0</lz4.version>
        <cglib.version>3.2.6</cglib.version>
        <orika.version>1.4.6</orika.version>
        <!--mina socket-->
        <mina.version>2.0.22</mina.version>
        <!--kafka-->
        <kafka.version>0.9.0.0</kafka.version>
        <avro.version>1.7.7</avro.version>

        <!-- jdbc driver setting -->
        <mysql.driver.version>5.1.30</mysql.driver.version>
        <sharding.jdbc.version>1.4.1</sharding.jdbc.version>
        <druid.version>1.0.15</druid.version>
        <mybatis-spring-boot-starter.version>1.1.1</mybatis-spring-boot-starter.version>
        <!--zookeeper-->
        <zookeeper.version>3.4.7</zookeeper.version>
        <zkclient.version>0.5</zkclient.version>
        <quartz.version>2.2.2</quartz.version>
        <curator.version>2.9.0</curator.version>

        <!--jedis-->
        <jedis.version>2.9.0</jedis.version>
        <commons.lang3.version>3.4</commons.lang3.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.collections.version>3.2.1</commons.collections.version>

        <!--httpClient-->
        <httpclient.version>4.5.2</httpclient.version>

        <!--fastjson -->
        <fastjson.version>1.1.41</fastjson.version>
        <disruptor.version>3.3.4</disruptor.version>

        <qiniusdk.version>7.2.11</qiniusdk.version>
        <hystrix.version>1.5.12</hystrix.version>
        <!--webmagic-->
        <webmagic.version>0.5.3</webmagic.version>
        <aspectj.version>1.8.9</aspectj.version>
        <cat.version>1.4.0</cat.version>
        <springfox.version>2.4.0</springfox.version>
        <ganymed.ssh.version>build210</ganymed.ssh.version>
        <elasticsearch.version>2.4.0</elasticsearch.version>
        <cache.version>1.0.0</cache.version>
        <!-- environment character -->
        <jdk.version>1.8</jdk.version>
        <webserver.port>80</webserver.port>
        <downloadSources>true</downloadSources>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${cache.version}</version>
            </dependency>
            <!-- httpClient start -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--fluent api-->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>fluent-hc</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!-- httpClient end -->

            <!--common util begin-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <!--common util end-->

            <!--kafka  begin-->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.10</artifactId>
                <version>${kafka.version}</version>
            </dependency>

           <!-- <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>-->

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <!--kafka  end-->

            <!-- kafka -1.1.0 begin-->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>1.1.0</version>
            </dependency>
            <!-- kafka -1.1.0 end-->

            <!--zookeeper-->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- zclient -->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                        <exclusion>
                            <artifactId>slf4j-log4j12</artifactId>
                            <groupId>org.slf4j</groupId>
                        </exclusion>
                </exclusions>
            </dependency>
            <!--curator -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-test</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!--redis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!-- mina框架 socket -->
            <dependency>
                <groupId>org.apache.mina</groupId>
                <artifactId>mina-core</artifactId>
                <version>${mina.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!-- logging begin -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- logging end -->

            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!--fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>

            <!-- Feed4JUnit带数据测试 -->
            <dependency>
                <groupId>org.databene</groupId>
                <artifactId>contiperf</artifactId>
                <version>${contiperf.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- jdbc driver begin-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.driver.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.dangdang</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>${sharding.jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.dangdang</groupId>
                <artifactId>sharding-jdbc-config-spring</artifactId>
                <version>${sharding.jdbc.version}</version>
            </dependency>
            <!--mybatis springboot-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!-- jdbc driver end-->
            <!--aop-->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>

            <!--大众点评监控组件cat-->
            <dependency>
                <groupId>com.dianping.cat</groupId>
                <artifactId>cat-core</artifactId>
                <version>${cat.version}</version>
            </dependency>

            <!-- Swagger resutApi -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-core</artifactId>
                <version>${webmagic.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-log4j12</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>us.codecraft</groupId>
                <artifactId>webmagic-extension</artifactId>
                <version>${webmagic.version}</version>
            </dependency>

            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>${qiniusdk.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.ethz.ganymed</groupId>
                <artifactId>ganymed-ssh2</artifactId>
                <version>${ganymed.ssh.version}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>net.jpountz.lz4</groupId>
                <artifactId>lz4</artifactId>
                <version>${lz4.version}</version>
            </dependency>

            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-core</artifactId>
                <version>${hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-metrics-event-stream</artifactId>
                <version>${hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.hystrix</groupId>
                <artifactId>hystrix-serialization</artifactId>
                <version>${hystrix.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!--利用profile属性可以实现不同环境下面打包的问题-->
    <profiles>
        <!--profiles属性学习 profilek可以定义在pom.xml中，和setting.xml中-->
        <profile>
            <id>study</id>
            <!--profile的激活方式-->
            <activation>
                <!--使用activeByDefault设置激活-->
                <activeByDefault>false</activeByDefault>
                <!---->
                <file></file>
                <!--根据环境来激活-->
                <jdk>[1.4,1.7)</jdk>
                <!--根据操作系统来激活profile-->
                <os>
                    <name>Windows XP</name>
                    <family>Windows</family>
                    <arch>x86</arch>
                    <version>5.1.2600</version>
                </os>
                <!--系统属性来激活profile-->
                <property>
                    <name>hello</name>
                    <value>gaoguangjin</value>
                </property>
            </activation>
        </profile>
        <!--可以通过mvn:package -P testprofile 命令测试，效果是跳过单元测试和-DskipTests打包时候跳过单元测试一样-->
        <profile>
            <id>testprofile</id>
            <!--自定义属性，可以在spring里面用${db-type}调用得到值-->
            <properties>
                <db-type>mysql</db-type>
             </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <developers>
        <developer>
            <id>ggj</id>
            <name>gaoguangjin</name>
            <email>335424093@qq.com</email>
            <roles>
                <role>Project lead</role>
            </roles>
        </developer>
    </developers>

</project>
